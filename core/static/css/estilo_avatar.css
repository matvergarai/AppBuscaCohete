/* /!\ You need to add vendor prefixes in order to render the CSS properly (or simply use http://leaverou.github.io/prefixfree/) /!\ */ #tridiv {
    perspective: 800px;
    position: absolute;
    overflow: hidden;
    width: 100%;
    height: 100%;
    background: transparent;
    font-size: 100%;
  }
  .face {
    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.37);
  }
  .scene, .shape, .face, .face-wrapper, .cr {
    position: absolute;
    transform-style: preserve-3d;
  }
  .scene {
    width: 80em;
    height: 80em;
    top: 50%;
    left: 50%;
    margin: -40em 0 0 -40em;
  }
  .shape {
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    transform-origin: 50%;
  }
  .face, .face-wrapper {
    overflow: hidden;
    transform-origin: 0 0;
    backface-visibility: hidden;
    /* hidden by default, prevent blinking and other weird rendering glitchs */
  }
  .face {
    background-size: 100% 100%!important;
    background-position: center;
  }
  .face-wrapper .face {
    left: 100%;
    width: 100%;
    height: 100%
  }
  .photon-shader {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%
  }
  .side {
    left: 50%;
  }
  .cr, .cr .side {
    height: 100%;
  }
  [class*="cuboid"] .ft, [class*="cuboid"] .bk {
    width: 100%;
    height: 100%;
  }
  [class*="cuboid"] .bk {
    left: 100%;
  }
  [class*="cuboid"] .rt {
    transform: rotateY(-90deg) translateX(-50%);
  }
  [class*="cuboid"] .lt {
    transform: rotateY(90deg) translateX(-50%);
  }
  [class*="cuboid"] .tp {
    transform: rotateX(90deg) translateY(-50%);
  }
  [class*="cuboid"] .bm {
    transform: rotateX(-90deg) translateY(-50%);
  }
  [class*="cuboid"] .lt {
    left: 100%;
  }
  [class*="cuboid"] .bm {
    top: 100%;
  }
  /* .cub-1 styles */
  .cub-1 {
    transform:translate3D(0em, -2.8em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:4em;
    height:4em;
    margin:-2em 0 0 -2em;
  }
  .cub-1 .ft {
    transform:translateZ(2em);
  }
  .cub-1 .bk {
    transform:translateZ(-2em) rotateY(180deg);
  }
  .cub-1 .rt, .cub-1 .lt {
    width:4em;
    height:4em;
  }
  .cub-1 .tp, .cub-1 .bm {
    width:4em;
    height:4em;
  }
  .cub-1 .face {
    background-color:#7dda71;
  }
  .cub-1 .ft {
    background:url(https://static.vecteezy.com/system/resources/previews/014/392/002/original/smile-icon-on-transparent-background-free-png.png) #7dda71;
  }
  /* .cub-2 styles */
  .cub-2 {
    transform:translate3D(0em, 2em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:3.4em;
    height:5em;
    margin:-2.5em 0 0 -1.7em;
  }
  .cub-2 .ft {
    transform:translateZ(1.25em);
  }
  .cub-2 .bk {
    transform:translateZ(-1.25em) rotateY(180deg);
  }
  .cub-2 .rt, .cub-2 .lt {
    width:2.5em;
    height:5em;
  }
  .cub-2 .tp, .cub-2 .bm {
    width:3.4em;
    height:2.5em;
  }
  .cub-2 .face {
    background-color:#7dda71;
  }
  /* .cub-3 styles */
  .cub-3 {
    transform:translate3D(2.2em, 1.8em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:1em;
    height:4.5em;
    margin:-2.25em 0 0 -0.5em;
  }
  .cub-3 .ft {
    transform:translateZ(0.5em);
  }
  .cub-3 .bk {
    transform:translateZ(-0.5em) rotateY(180deg);
  }
  .cub-3 .rt, .cub-3 .lt {
    width:1em;
    height:4.5em;
  }
  .cub-3 .tp, .cub-3 .bm {
    width:1em;
    height:1em;
  }
  .cub-3 .face {
    background-color:#7dda71;
  }
  /* .cub-4 styles */
  .cub-4 {
    transform:translate3D(-2.2em, 1.8em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:1em;
    height:4.5em;
    margin:-2.25em 0 0 -0.5em;
  }
  .cub-4 .ft {
    transform:translateZ(0.5em);
  }
  .cub-4 .bk {
    transform:translateZ(-0.5em) rotateY(180deg);
  }
  .cub-4 .rt, .cub-4 .lt {
    width:1em;
    height:4.5em;
  }
  .cub-4 .tp, .cub-4 .bm {
    width:1em;
    height:1em;
  }
  .cub-4 .face {
    background-color:#7dda71;
  }
  /* .cub-5 styles */
  .cub-5 {
    transform:translate3D(-1em, 5em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:1em;
    height:6em;
    margin:-3em 0 0 -0.5em;
  }
  .cub-5 .ft {
    transform:translateZ(0.5em);
  }
  .cub-5 .bk {
    transform:translateZ(-0.5em) rotateY(180deg);
  }
  .cub-5 .rt, .cub-5 .lt {
    width:1em;
    height:6em;
  }
  .cub-5 .tp, .cub-5 .bm {
    width:1em;
    height:1em;
  }
  .cub-5 .face {
    background-color:#7dda71;
  }
  /* .cub-6 styles */
  .cub-6 {
    transform:translate3D(1em, 5em, 0em) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    opacity:1;
    width:1em;
    height:6em;
    margin:-3em 0 0 -0.5em;
  }
  .cub-6 .ft {
    transform:translateZ(0.5em);
  }
  .cub-6 .bk {
    transform:translateZ(-0.5em) rotateY(180deg);
  }
  .cub-6 .rt, .cub-6 .lt {
    width:1em;
    height:6em;
  }
  .cub-6 .tp, .cub-6 .bm {
    width:1em;
    height:1em;
  }
  .cub-6 .face {
    background-color:#7dda71;
  }
  .cub-6 .ft {
    width:1em;
    margin-left:0em;
  }
  .cub-6 .bk {
    width:1em;
    margin-left:0em;
  }
  .cub-6 .rt, .cub-6 .lt {
    width:1em;
  }
  .cub-6 .tp, .cub-6 .bm, .cub-6 .tp .photon-shader, .cub-6 .bm .photon-shader {
    border-radius:0em;
  }
  .cub-6 .cr {
    width:0em;
    left:0em;
  }
  .cub-6 .cr-0 {
    transform: translate3D(1em, 0, 0.5em);
  }
  .cub-6 .cr-1 {
    transform: translate3D(1em, 0, -0.5em);
  }
  .cub-6 .cr-2 {
    transform: translate3D(0, 0, -0.5em);
  }
  .cub-6 .cr-3 {
    transform: translate3D(0, 0, 0.5em);
  }
  .cub-6 .cr-0 .s0 {
    transform: rotateY(15deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-0 .s1 {
    transform: rotateY(45deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-0 .s2 {
    transform: rotateY(75deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-1 .s0 {
    transform: rotateY(105deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-1 .s1 {
    transform: rotateY(135deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-1 .s2 {
    transform: rotateY(165deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-2 .s0 {
    transform: rotateY(195deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-2 .s1 {
    transform: rotateY(225deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-2 .s2 {
    transform: rotateY(255deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-3 .s0 {
    transform: rotateY(285deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-3 .s1 {
    transform: rotateY(315deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .cr-3 .s2 {
    transform: rotateY(345deg) translate3D(-50%, 0, -0.025em);
  }
  .cub-6 .side {
    width:0.025em;
  }